name: Deploy to Firebase

on:
  push:
    branches:
      - main

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest
    environment:
      name: Production
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Install Firebase CLI
        run: npm install -g firebase-tools@13

      - name: Setup Google Cloud Credentials
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.FIREBASE_SERVICE_ACCOUNT_KEY }}

      - name: Verify Firebase Project
        run: |
          export PATH="$PATH:$(npm bin -g)"
          firebase projects:list
          firebase use portfelik-888dd

      - name: Build and Deploy
        env:
          VITE_FIREBASE_API_KEY: ${{ secrets.VITE_FIREBASE_API_KEY }}
          VITE_FIREBASE_AUTH_DOMAIN: ${{ secrets.VITE_FIREBASE_AUTH_DOMAIN }}
          VITE_FIREBASE_PROJECT_ID: ${{ secrets.VITE_FIREBASE_PROJECT_ID }}
          VITE_FIREBASE_STORAGE_BUCKET: ${{ secrets.VITE_FIREBASE_STORAGE_BUCKET }}
          VITE_FIREBASE_MESSAGING_SENDER_ID: ${{ secrets.VITE_FIREBASE_MESSAGING_SENDER_ID }}
          VITE_FIREBASE_APP_ID: ${{ secrets.VITE_FIREBASE_APP_ID }}
          VITE_FIREBASE_MEASUREMENT_ID: ${{ secrets.VITE_FIREBASE_MEASUREMENT_ID }}
          VITE_FIREBASE_VAPID_KEY: ${{ secrets.VITE_FIREBASE_VAPID_KEY }}
          VITE_API_BASE_URL: ${{ secrets.VITE_API_BASE_URL }}
        run: |
          export PATH="$PATH:$(npm bin -g)"
          npm run deploy

      - name: Cleanup unused Docker images
        run: |
          # Install Google Cloud SDK if needed
          if ! command -v gcloud &> /dev/null; then
            echo "Installing gcloud CLI..."
            curl -O https://dl.google.com/dl/cloudsdk/channels/rapid/downloads/google-cloud-cli-latest-linux-x86_64.tar.gz
            tar -xf google-cloud-cli-latest-linux-x86_64.tar.gz
            ./google-cloud-sdk/install.sh --quiet
            export PATH="$PATH:$PWD/google-cloud-sdk/bin"
          fi

          # Authenticate with gcloud - already done above with google-github-actions/auth
          gcloud config set project portfelik-888dd

          # List and delete unused Artifact Registry images
          echo "Cleaning up Artifact Registry images..."
          gcloud artifacts docker images list europe-central2-docker.pkg.dev/portfelik-888dd/gcf-artifacts --format="value(name)" | \
          while read -r IMAGE; do
            if [[ ! -z "$IMAGE" ]]; then
              echo "Deleting $IMAGE"
              gcloud artifacts docker images delete "$IMAGE" --quiet
            fi
          done